77575373931
98958796
d.counties %>%
group_by(STATEFP10) %>%
mutate(., CntyTotArea = ALAND10+AWATER10) %>%
mutate(., StTotArea = sum(CntyTotArea))
#mutate(., TotArea = ALAND10 + AWATER10) %>%
#mutate(., PcntLand = (ALAND10 / TotArea)*100)
77575373931
98958796
d.counties %>%
group_by(STATEFP10) %>%
mutate(., CntyTotArea = ALAND10+AWATER10) %>%
mutate(., StTotArea = sum(CntyTotArea))
#mutate(., TotArea = ALAND10 + AWATER10) %>%
#mutate(., PcntLand = (ALAND10 / TotArea)*100)
#77575373931
#98958796
26570336+40060104+17586091+16254519
d.counties %>%
mutate(., CntyTotArea = ALAND10 + AWATER10) %>%
group_by(STATEFP10) %>%
mutate(., StTotArea = sum(CntyTotArea))
#mutate(., TotArea = ALAND10 + AWATER10) %>%
#mutate(., PcntLand = (ALAND10 / TotArea)*100)
#77575373931
#98958796
26570336+40060104+17586091+16254519=x
26570336+40060104+17586091+16254519 =
d.counties %>%
mutate(., CntyTotArea = ALAND10 + AWATER10) %>%
group_by(STATEFP10) %>%
mutate(., StTotArea = sum(CntyTotArea))
26570336+40060104+17586091+16254519
d.counties %>%
mutate(., CntyTotArea = ALAND10 + AWATER10) %>%
group_by(STATEFP10) %>%
mutate(., StTotArea = sum(CntyTotArea))
#mutate(., TotArea = ALAND10 + AWATER10) %>%
#mutate(., PcntLand = (ALAND10 / TotArea)*100)
#77575373931
#98958796
view(d.counties)
view(d.counties)
View(d.counties)
d.counties %>%
group_by(STATEFP10) %>%
count(COUNTYFP10)
d.counties %>%
count(STATEFP10)
d.counties %>%
mutate(., TotArea = ALAND10 + AWATER10) %>%
mutate(., PropWater = (AWATER10 /TotArea)*100) %>% #Proportion water as a %
group_by(STATEFP10) %>%
slice_max(PropWater)
d.counties %>%
mutate(., CntyTotArea = ALAND10 + AWATER10) %>%
group_by(STATEFP10) %>%
mutate(., StTotArea = sum(CntyTotArea))
view(d.counties)
#mutate(., TotArea = ALAND10 + AWATER10) %>%
#mutate(., PcntLand = (ALAND10 / TotArea)*100)
#77575373931
#98958796
d.counties %>%
mutate(., CntyTotArea = ALAND10 + AWATER10) %>%
group_by(STATEFP10) %>%
mutate(., StTotArea = sum(CntyTotArea)) %>%
mutate(., PcntLandArea = (ALAND10 / StTotArea)*100)
d.counties1 %>%
mutate(., CntyTotArea = ALAND10 + AWATER10) %>%
group_by(STATEFP10) %>%
mutate(., StTotArea = sum(CntyTotArea)) %>%
mutate(., PcntLandArea = (ALAND10 / StTotArea)*100)
d.counties1 <- d.counties %>%
mutate(., CntyTotArea = ALAND10 + AWATER10) %>%
group_by(STATEFP10) %>%
mutate(., StTotArea = sum(CntyTotArea)) %>%
mutate(., PcntLandArea = (ALAND10 / StTotArea)*100)
View(d.counties1)
d.counties1 <- d.counties %>%
mutate(., CntyTotArea = ALAND10 + AWATER10) %>%
group_by(STATEFP10) %>%
mutate(., StTotArea = sum(CntyTotArea)) %>%
mutate(., PcntLandArea = (ALAND10 / StTotArea)*100) %>%
sort_by(STATEFP10)
d.counties1 <- d.counties %>%
mutate(., CntyTotArea = ALAND10 + AWATER10) %>%
group_by(STATEFP10) %>%
mutate(., StTotArea = sum(CntyTotArea)) %>%
mutate(., PcntLandArea = (ALAND10 / StTotArea)*100) %>%
arrange(STATEFP10)
d.counties1 <- d.counties %>%
mutate(., CntyTotArea = ALAND10 + AWATER10) %>%
group_by(STATEFP10) %>%
mutate(., StTotArea = sum(CntyTotArea)) %>%
mutate(., PcntLandArea = (ALAND10 / StTotArea)*100) %>%
arrange(STATEFP10)
View(d.counties1)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2) #technically included in tidyverse
library(sf)
#name files
p.counties <- "./data/County_Boundaries.shp"
p.stations <- "./data/Non-Tidal_Water_Quality_Monitoring_Stations_in_the_Chesapeake_Bay.shp"
#Read files in sf package
d.counties <- sf::read_sf(p.counties)
d.stations <- sf::read_sf(p.stations)
# check for validity
d.stations %>% sf::st_is_valid()
d.counties %>% sf::st_is_valid() # returns false for one feature, so we need to fix
# fix it "in place"
d.counties <- d.counties %>% sf::st_make_valid()
d.counties1 <- d.counties %>%
mutate(., CntyTotArea = ALAND10 + AWATER10) %>%
group_by(STATEFP10) %>%
mutate(., StTotArea = sum(CntyTotArea)) %>%
mutate(., PcntLandArea = (ALAND10 / StTotArea)*100) %>%
arrange(STATEFP10)
d.counties %>%
mutate(., TotArea = ALAND10 + AWATER10) %>%
mutate(., PropWater = (AWATER10 /TotArea)*100) %>% #Proportion water as a %
group_by(STATEFP10) %>%
slice_max(PropWater)
d.counties %>%
count(STATEFP10)
d.counties1 <- d.counties %>%
mutate(., CntyTotArea = ALAND10 + AWATER10) %>%
group_by(STATEFP10) %>%
mutate(., StTotArea = sum(CntyTotArea)) %>%
mutate(., PcntLandArea = (ALAND10 / StTotArea)*100) %>%
arrange(STATEFP10)
d.counties1 <- d.counties %>%
mutate(., CntyTotArea = ALAND10 + AWATER10) %>%
group_by(STATEFP10) %>%
mutate(., StTotArea = sum(CntyTotArea)) %>%
mutate(., PcntLandArea = (ALAND10 / StTotArea)*100) %>%
#arrange(STATEFP10)
d.counties1 <- d.counties %>%
mutate(., CntyTotArea = ALAND10 + AWATER10) %>%
group_by(STATEFP10) %>%
mutate(., StTotArea = sum(CntyTotArea)) %>%
mutate(., PcntLandArea = (ALAND10 / StTotArea)*100) #%>%
#arrange(STATEFP10)
d.counties1 <- d.counties %>%
mutate(., CntyTotArea = ALAND10 + AWATER10) %>%
group_by(STATEFP10) %>%
mutate(., StTotArea = sum(CntyTotArea)) %>%
mutate(., PcntLandArea = (ALAND10 / StTotArea)*100) #%>%
#arrange(STATEFP10)
d.counties <- d.counties %>%
mutate(., CntyTotArea = ALAND10 + AWATER10) %>%
group_by(STATEFP10) %>%
mutate(., StTotArea = sum(CntyTotArea)) %>%
mutate(., PcntLandArea = (ALAND10 / StTotArea)*100) #%>%
#arrange(STATEFP10)
d.counties %>%
mutate(., TotArea = ALAND10 + AWATER10) %>%
mutate(., PropWater = (AWATER10 /TotArea)*100) %>% #Proportion water as a %
group_by(STATEFP10) %>%
slice_max(PropWater)
d.counties <- d.counties %>%
mutate(., CntyTotArea = ALAND10 + AWATER10) %>%
group_by(STATEFP10) %>%
mutate(., StTotArea = sum(CntyTotArea)) %>%
mutate(., PcntLandArea = (ALAND10 / StTotArea)*100) #%>%
#arrange(STATEFP10)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2) #technically included in tidyverse
library(sf)
#name files
p.counties <- "./data/County_Boundaries.shp"
p.stations <- "./data/Non-Tidal_Water_Quality_Monitoring_Stations_in_the_Chesapeake_Bay.shp"
#Read files in sf package
d.counties <- sf::read_sf(p.counties)
d.stations <- sf::read_sf(p.stations)
# check for validity
d.stations %>% sf::st_is_valid()
d.counties %>% sf::st_is_valid() # returns false for one feature, so we need to fix
# fix it "in place"
d.counties <- d.counties %>% sf::st_make_valid()
d.counties <- d.counties %>%
mutate(., CntyTotArea = ALAND10 + AWATER10) %>%
group_by(STATEFP10) %>%
mutate(., StTotArea = sum(CntyTotArea)) %>%
mutate(., PcntLandArea = (ALAND10 / StTotArea)*100) #%>%
#arrange(STATEFP10)
d.counties %>%
mutate(., TotArea = ALAND10 + AWATER10) %>%
mutate(., PropWater = (AWATER10 /TotArea)*100) %>% #Proportion water as a %
group_by(STATEFP10) %>%
slice_max(PropWater)
d.counties %>%
count(STATEFP10)
d.counties %>%
mutate(., CntyTotArea = ALAND10 + AWATER10) %>%
group_by(STATEFP10) %>%
mutate(., StTotArea = sum(CntyTotArea)) %>%
mutate(., PcntLandArea = (ALAND10 / StTotArea)*100) #%>%
arrange(STATEFP10)
d.counties %>%
mutate(., CntyTotArea = ALAND10 + AWATER10) %>%
group_by(STATEFP10) %>%
mutate(., StTotArea = sum(CntyTotArea)) %>%
mutate(., PcntLandArea = (ALAND10 / StTotArea)*100) %>%
arrange(STATEFP10)
d.counties %>%
slice_min(STATION_NA)
View(d.stations)
d.stations %>%
slice_min(STATION_NA)
View(d.stations)
d.stations %>%
nchar(STATION_NA)
d.counties %>%
ggplot(., aes(x=ALAND10, y=AWATER10))+
geom_point(color = STATEFP10)+
theme_classic() +
labs(title = 'Deviations from maximum NE housing value',
subtitle = 'County scale',
x = "Deviation",
y = 'Count')
View(d.counties)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2) #technically included in tidyverse
library(sf)
#name files
p.counties <- "./data/County_Boundaries.shp"
p.stations <- "./data/Non-Tidal_Water_Quality_Monitoring_Stations_in_the_Chesapeake_Bay.shp"
#Read files in sf package
d.counties <- sf::read_sf(p.counties)
d.stations <- sf::read_sf(p.stations)
# check for validity
d.stations %>% sf::st_is_valid()
d.counties %>% sf::st_is_valid() # returns false for one feature, so we need to fix
# fix it "in place"
d.counties <- d.counties %>% sf::st_make_valid()
d.counties %>%
mutate(., CntyTotArea = ALAND10 + AWATER10) %>%
group_by(STATEFP10) %>%
mutate(., StTotArea = sum(CntyTotArea)) %>%
mutate(., PcntLandArea = (ALAND10 / StTotArea)*100) %>%
arrange(STATEFP10)
d.counties %>%
mutate(., TotArea = ALAND10 + AWATER10) %>%
mutate(., PropWater = (AWATER10 /TotArea)*100) %>% #Proportion water as a %
group_by(STATEFP10) %>%
slice_max(PropWater)
d.counties %>%
count(STATEFP10) #Counts the occurrences of each STATEFP10 in column "n"
d.stations %>%
nchar(STATION_NA)
View(d.counties)
d.counties %>%
ggplot(., aes(x=ALAND10, y=AWATER10))+
geom_point(color = STATEFP10)+
theme_classic() +
labs(title = 'Deviations from maximum NE housing value',
subtitle = 'County scale',
x = "Deviation",
y = 'Count')
d.counties %>%
ggplot(., aes(x=ALAND10, y=AWATER10))+
geom_point()+
theme_classic() +
labs(title = 'Deviations from maximum NE housing value',
subtitle = 'County scale',
x = "Deviation",
y = 'Count')
d.counties %>%
ggplot(., aes(x=ALAND10, y=AWATER10))+
geom_point(color)+
theme_bw() +
labs(title = 'Land area compared to water area',
subtitle = 'County scale',
x = "Area of Land",
y = 'Area of Water')
d.counties %>%
ggplot(., aes(x=ALAND10, y=AWATER10))+
geom_point(color = 'blue')+
theme_bw() +
labs(title = 'Land area compared to water area',
subtitle = 'County scale',
x = "Area of Land",
y = 'Area of Water')
d.counties %>%
ggplot(., aes(x=ALAND10, y=AWATER10))+
geom_point(color = 'STATEFP10')+
theme_bw() +
labs(title = 'Land area compared to water area',
subtitle = 'County scale',
x = "Area of Land",
y = 'Area of Water')
d.counties %>%
ggplot(., aes(x=ALAND10, y=AWATER10))+
geom_point(color = STATEFP10)+
theme_bw() +
labs(title = 'Land area compared to water area',
subtitle = 'County scale',
x = "Area of Land",
y = 'Area of Water')
d.counties %>%
ungroup(d.counties) %>%
ggplot(., aes(x=ALAND10, y=AWATER10))+
geom_point(color = STATEFP10)+
theme_bw() +
labs(title = 'Land area compared to water area',
subtitle = 'County scale',
x = "Area of Land",
y = 'Area of Water')
d.counties %>%
ungroup() %>%
ggplot(., aes(x=ALAND10, y=AWATER10))+
geom_point(color = STATEFP10)+
theme_bw() +
labs(title = 'Land area compared to water area',
subtitle = 'County scale',
x = "Area of Land",
y = 'Area of Water')
d.counties %>%
ungroup() %>%
ggplot(., aes(x=ALAND10, y=AWATER10))+
geom_point(aes(color = STATEFP10))+
theme_bw() +
labs(title = 'Land area compared to water area',
subtitle = 'County scale',
x = "Area of Land",
y = 'Area of Water')
d.counties %>%
ungroup() %>%
ggplot(., aes(x=ALAND10, y=AWATER10, color = STATEFP10))+
geom_point()+
theme_bw() +
labs(title = 'Land area compared to water area',
subtitle = 'County scale',
x = "Area of Land",
y = 'Area of Water')
d.counties %>%
ungroup() %>%
ggplot(., aes(x=ALAND10, y=AWATER10))+
geom_point(aes(color = STATEFP10))+
theme_bw() +
labs(title = 'Land area compared to water area',
subtitle = 'County scale',
x = "Area of Land",
y = 'Area of Water')
d.counties %>%
ggplot(., aes(x=ALAND10, y=AWATER10))+
geom_point(aes(color = STATEFP10))+
theme_bw() +
labs(title = 'Land area compared to water area',
subtitle = 'County scale',
x = "Area of Land",
y = 'Area of Water')
d.counties %>%
ggplot(., aes(x=ALAND10, y=AWATER10))+
geom_point(aes(color = STATEFP10))+
theme_classic() +
labs(title = 'Land area compared to water area',
subtitle = 'County scale',
x = "Area of Land",
y = 'Area of Water')
d.counties %>%
ggplot(., aes(x=ALAND10, y=AWATER10))+
geom_point(aes(color = STATEFP10))+
theme_bw() +
labs(title = 'Land area compared to water area',
subtitle = 'County scale',
x = "Area of Land",
y = 'Area of Water')
d.counties %>%
ggplot(., aes(x=ALAND10, y=AWATER10))+
geom_point(aes(color = STATEFP10))+
theme_bw() +
labs(title = 'Land area compared to water area',
subtitle = 'County scale',
x = "Area of Land",
y = 'Area of Water',
fill = 'State FIPS')
d.counties %>%
ggplot(., aes(x=ALAND10, y=AWATER10))+
geom_point(aes(color = STATEFP10))+
theme_bw() +
labs(title = 'Land area compared to water area',
subtitle = 'County scale',
x = "Area of Land",
y = 'Area of Water',
color = 'State FIPS')
View(d.stations)
d.stations %>%
ggplot(., aes(y=Drainage_A))+
geom_histogram()+
theme_bw() +
labs(title = 'Land area compared to water area',
subtitle = 'County scale',
x = "Area of Land",
y = 'Area of Water',
color = 'State FIPS')
d.stations %>%
ggplot(., aes(x=Drainage_A))+
geom_histogram()+
theme_bw() +
labs(title = 'Land area compared to water area',
subtitle = 'County scale',
x = "Area of Land",
y = 'Area of Water',
color = 'State FIPS')
d.stations %>%
ggplot(., aes(x=Drainage_A))+
geom_histogram(aes(color='purple'))+
theme_bw() +
labs(title = 'Land area compared to water area',
subtitle = 'County scale',
x = "Drainage Area",
y = 'Number of stations',
color = 'State FIPS')
d.stations %>%
ggplot(., aes(x=Drainage_A))+
geom_histogram(aes(fill='purple'))+
theme_bw() +
labs(title = 'Land area compared to water area',
subtitle = 'County scale',
x = "Drainage Area",
y = 'Number of stations',
color = 'State FIPS')
d.stations %>%
ggplot(., aes(x=Drainage_A))+
geom_histogram(aes(fill='red'))+
theme_bw() +
labs(title = 'Land area compared to water area',
subtitle = 'County scale',
x = "Drainage Area",
y = 'Number of stations',
color = 'State FIPS')
d.stations %>%
ggplot(., aes(x=Drainage_A))+
geom_histogram(aes(fill='green'))+
theme_bw() +
labs(title = 'Land area compared to water area',
subtitle = 'County scale',
x = "Drainage Area",
y = 'Number of stations',
color = 'State FIPS')
d.stations %>%
ggplot(., aes(x=Drainage_A))+
geom_histogram(aes(fill='red'))+
theme_bw() +
labs(title = 'Land area compared to water area',
subtitle = 'County scale',
x = "Drainage Area",
y = 'Number of stations',
color = 'State FIPS')
d.stations %>%
ggplot(., aes(x=Drainage_A))+
geom_histogram(aes(fill='red'))+
theme_bw() +
labs(title = 'Drainage area of water monitoring stations',
subtitle = '',
x = "Drainage Area",
y = 'Number of stations')
d.stations %>%
ggplot(., aes(x=Drainage_A))+
geom_histogram(aes(fill='red'))+
theme_bw() +
labs(title = 'Drainage area of water monitoring stations',
x = "Drainage Area",
y = 'Number of stations'
)
d.stations %>%
ggplot(., aes(x=Drainage_A))+
geom_histogram(aes(fill='red'))+
theme_bw() +
labs(title = 'Drainage area of water monitoring stations',
x = "Drainage Area",
y = 'Number of stations'
)
d.stations %>%
ggplot(., aes(x=Drainage_A))+
geom_histogram()+
theme_bw() +
labs(title = 'Drainage area of water monitoring stations',
x = "Drainage Area",
y = 'Number of stations')
d.stations %>%
ggplot(., aes(x=Drainage_A))+
geom_histogram(aes(fill=STATEFP10))+
theme_bw() +
labs(title = 'Drainage area of water monitoring stations',
x = "Drainage Area",
y = 'Number of stations')
d.stations %>%
ggplot(., aes(x=Drainage_A))+
geom_histogram(aes(fill = STATEFP10)) +
theme_bw() +
labs(title = 'Drainage area of water monitoring stations',
x = "Drainage Area",
y = 'Number of stations')
knitr::opts_chunk$set(echo = TRUE)
del.stations <- sf::st_intersection(d.stations, del.counties)
del.counties <- d.counties %>% dplyr::filter(STATEFP10 == 10)
del.stations <- sf::st_intersection(d.stations, del.counties)
del.counties %>% st_area()
View(del.stations)
Task3 <- function(){
Mean = mean()
Median = median()
Max = max()
Min = min()
}
